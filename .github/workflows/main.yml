name: Automated Daily Repository Update

on:
  # 1. Use schedule with cron syntax to run once per day (must use specific hours/minutes, not wildcards)
  # This runs every day at 01:00 UTC (a specific time).
  schedule:
    - cron: '0 1 * * *'
  
  # Allow manual execution for initial testing and verification
  workflow_dispatch:

jobs:
  daily_commit:
    runs-on: ubuntu-latest
    
    # FIX: Grant the GITHUB_TOKEN explicit write permission to the repository
    permissions:
      contents: write 
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        # FIX: Pass the GITHUB_TOKEN to the checkout action for authentication
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true 

      # 2. Include a step with your email 21f3003163@ds.study.iitm.ac.in in its name
      - name: Preparing Commit and Identifying User 21f3003163@ds.study.iitm.ac.in
        run: |
          # Configure Git user for the commit
          git config --global user.name 'DevSync Daily Bot'
          # Standard bot email used by GitHub Actions
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          
          # Create or update a file with the current timestamp to ensure a change exists every run.
          echo "Last automated update: $(date)" > DAILY_UPDATE_STATUS.txt
          
      - name: Check for Changes and Stage Files
        id: git_status
        run: |
          # Stage the updated file
          git add DAILY_UPDATE_STATUS.txt
          
          # Check if there are any changes (index differs from HEAD)
          if git diff --cached --exit-code; then
            echo "No changes detected, skipping commit."
            echo "commit_needed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected, ready to commit."
            echo "commit_needed=true" >> $GITHUB_OUTPUT
          fi
          
      # 3. Create a commit in each run
      - name: Create and Push Automated Commit
        # Only run this step if a change was actually detected
        if: steps.git_status.outputs.commit_needed == 'true'
        run: |
          # Commit the changes with a dynamic message
          git commit -m "Automated daily update: $(date +%Y-%m-%d)"
          
          # Push the new commit to the repository
          git push
